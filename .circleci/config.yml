# TEMPLATED
version: 2.1
workflows:
  version: 2
  test:
    jobs:
    - submit-daffy-stage:
        context: pip-staging
        filters:
          branches:
            only: /daffy-staging.*/
    - submit-daffy-prod:
        context: production
        filters:
          branches:
            ignore: /daffy-staging.*/
jobs:
  submit: &template
    docker:
    - image: ${DOCKER_REGISTRY}/duckietown/aido-submission-ci-test:daffy-amd64
      auth:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        name: Python stats
        command: |
          mkdir -p build-stats
          env | sort | tee  build-stats/env.txt
          pip list   | sort | tee  build-stats/pip-list.txt
          pip freeze | sort | tee  build-stats/pip-freeze.txt
    - store_artifacts:
        path: build-stats
        destination: build-stats
    - run:
        name: Setup daffy commands
        # language=bash
        command: |
          set -x
          dts --set-version "$DTS_VERSION"
          dts update
    - run:
        name: Setup token
        # language=bash
        command: |
          set -x
          dts tok verify "${token_dt1_bea}"
          dts tok set "${token_dt1_bea}"
          # this does not matter on the staging server
          dts challenges config --docker-server "$DOCKER_REGISTRY" --docker-username "$DOCKER_USERNAME" --docker-password "$DOCKER_PASSWORD"
          dts challenges config --docker-server registry-stage.duckietown.org --docker-username "$DOCKER_USERNAME" --docker-password "$DOCKER_PASSWORD"
    - run:
        name: "Challenges info"
        # language=bash
        command: |
          dts challenges info

    - run:
        name: Submit
        # language=bash
        command: |
          set -x
          #dts challenges evaluate --challenge aido-hello-sim-validation
          name="$CIRCLE_BRANCH-$CIRCLE_SHA1"
          dts challenges submit --impersonate 1639 --challenge aido-hello-sim-validation --user-label "${name}"
          dts challenges follow --label "${name}"

  submit-daffy-prod: *template
  submit-daffy-stage: *template

#  submit:
#    docker:
#      - image: python:3.8
#    environment:
#      DOCKER_VER: "18.09.2"
#      COMPOSE_VER: "1.23.2"
##    machine: true
#    steps:
#      - checkout
#      - run:
#          name: Install Docker client
#          # language=bash
#          command: |
#            set -x
#            curl -L -o /tmp/docker-${DOCKER_VER}.tgz \
#              https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VER}.tgz
#            tar -xz -C /tmp -f /tmp/docker-${DOCKER_VER}.tgz
#            mv /tmp/docker/* /usr/bin
#      - run:
#          name: Install Docker Compose
#          # language=bash
#          command: |
#            plt=docker-compose-`uname -s`-`uname -m`
#            curl -L https://github.com/docker/compose/releases/download/${COMPOSE_VER}/${plt} > ~/docker-compose
#            chmod +x ~/docker-compose
#            mv ~/docker-compose /usr/local/bin/docker-compose
#      - setup_remote_docker:
#          docker_layer_caching: true
#      - run:
#          name: Install deps
#          # language=bash
#          command: |
#            pip install  duckietown-shell duckietown-challenges-daffy pipdeptree
#            pipdeptree
#            pip list
#      - run:
#          name: Setup daffy commands
#          # language=bash
#          command: |
#            dts --set-version "$DTS_VERSION"
#            dts update
#      - run:
#          name: Setup token
#          # language=bash
#          command: |
#            dts tok verify ${token_dt1_bea}
#            dts tok set ${token_dt1_bea}
#            dts challenges config --docker-username bea
#
#      - run:
#          name: "Challenges info"
#          # language=bash
#          command: |
#            dts update
#            dts challenges info
#
#      - run:
#          name: Submit
#          # language=bash
#          command: |
#            dts challenges evaluate --challenge aido-hello-sim-validation
#      - jira/notify
